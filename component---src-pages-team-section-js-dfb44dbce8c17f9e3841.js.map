{"version":3,"file":"component---src-pages-team-section-js-dfb44dbce8c17f9e3841.js","mappings":"wLAkIA,UA7HoBA,KAClB,MAAM,EAACC,EAAY,EAACC,IAAkBC,EAAAA,EAAAA,UAAS,KACzC,EAACC,EAAQ,EAACC,IAAcF,EAAAA,EAAAA,WAAS,IACjC,EAACG,EAAM,EAACC,IAAYJ,EAAAA,EAAAA,UAAS,MAE7BK,EACJC,CAAAA,EAAYC,yBAA2B,mCAkEzC,OAJAC,EAAAA,EAAAA,WAAU,KAxBYC,WACpB,IACE,MAAMC,QAAiBC,MAAMN,EAAkB,CAC7CO,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEC,MA3Cf,sZA8CJC,QAAeR,EAASS,OAE9B,IAAID,EAAOE,OAAQF,EAAOE,KAAKC,gBAAgBC,MAG7C,MAAM,IAAIC,MAAM,iBAFhBxB,EAAemB,EAAOE,KAAKC,gBAAgBC,MAI/C,CAAE,MAAOnB,GACPC,EAAS,6BAA6BD,EAAMqB,UAC9C,CAAC,QACCtB,GAAW,EACb,GAIAuB,IACC,IAECxB,EACKyB,EAAAA,cAAA,WAAK,cAGVvB,EACKuB,EAAAA,cAAA,WAAMvB,GAGY,IAAvBL,EAAY6B,OACPD,EAAAA,cAAA,WAAK,yBAIZA,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACE,EAAAA,EAAM,MACPF,EAAAA,cAACG,EAAAA,EAAM,MACPH,EAAAA,cAAA,WAASI,UAAU,8BACjBJ,EAAAA,cAAA,MAAII,UAAU,yCAAwC,gBACtDJ,EAAAA,cAAA,MAAII,UAAU,yCAAwC,iBAEtDJ,EAAAA,cAAA,OAAKI,UAAU,oBA/DEC,KACrB,MAAMC,EAAO,GACb,IAAIC,EAAQ,EACRC,EAAU,EAEd,KAAOD,EAAQF,EAAQJ,QAAQ,CAC7B,MAAMQ,EAAMJ,EAAQK,MAAMH,EAAOA,EAAQC,GACzCF,EAAKK,KAAKF,GACVF,GAASC,EACTA,GAAW,CACb,CAEA,OAAOF,GAoDAM,CAAexC,GAAayC,IAAI,CAACJ,EAAKK,IACrCd,EAAAA,cAAA,OACEe,IAAKD,EACLV,UAAU,wCAETK,EAAII,IAAI,CAACG,EAAQC,KAAK,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OACrBtB,EAAAA,cAAA,OAAKe,IAAKE,EAAOb,UAAU,8BACzBJ,EAAAA,cAAA,OACEuB,KACEP,SAAqB,QAAfE,EAANF,EAAQQ,qBAAa,IAAAN,GAAuB,QAAvBC,EAArBD,EAAuBO,6BAAqB,IAAAN,GAC3B,QAD2BC,EAA5CD,EACIK,qBAAa,IAAAJ,GAAmB,QAAnBC,EADjBD,EACmBM,yBAAiB,IAAAL,GAAW,QAAXC,EADpCD,EACsCM,iBAAS,IAAAL,OADzC,EAANA,EACiDM,MAAO,GAE1DC,KAAKb,aAAM,EAANA,EAAQc,QAAS,cACtB1B,UAAU,mEAEZJ,EAAAA,cAAA,MAAII,UAAU,6CACXY,aAAM,EAANA,EAAQc,QAAS,WAEpB9B,EAAAA,cAAA,KAAGI,UAAU,0BACVY,aAAM,EAANA,EAAQe,oBAAqB,kBAQ5C/B,EAAAA,cAACgC,EAAAA,EAAM,O","sources":["webpack://gatsby-starter-default/./src/pages/team_section.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport Header from \"../components/header\"\r\nimport Navbar from \"../components/navbar\"\r\nimport Footer from \"../components/footer\"\r\n\r\nconst TeamSection = () => {\r\n  const [teamMembers, setTeamMembers] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(null)\r\n\r\n  const GRAPHQL_ENDPOINT =\r\n    process.env.GATSBY_GRAPHQL_ENDPOINT || \"http://localhost:8000/___graphql\"\r\n\r\n  const query = `\r\n    {\r\n      allNodeWhoIsWho {\r\n        nodes {\r\n          title\r\n          field_designation\r\n          relationships {\r\n            field_profile_picture {\r\n              relationships {\r\n                field_media_image {\r\n                  localFile {\r\n                    url\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `\r\n  const getPyramidRows = members => {\r\n    const rows = []\r\n    let start = 0\r\n    let rowSize = 1\r\n\r\n    while (start < members.length) {\r\n      const row = members.slice(start, start + rowSize)\r\n      rows.push(row)\r\n      start += rowSize\r\n      rowSize += 1\r\n    }\r\n\r\n    return rows\r\n  }\r\n\r\n  const fetchTeamData = async () => {\r\n    try {\r\n      const response = await fetch(GRAPHQL_ENDPOINT, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ query }),\r\n      })\r\n\r\n      const result = await response.json()\r\n\r\n      if (result.data && result.data.allNodeWhoIsWho.nodes) {\r\n        setTeamMembers(result.data.allNodeWhoIsWho.nodes)\r\n      } else {\r\n        throw new Error(\"No data found\")\r\n      }\r\n    } catch (error) {\r\n      setError(`Error fetching team data: ${error.message}`)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchTeamData()\r\n  }, [])\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error}</div>\r\n  }\r\n\r\n  if (teamMembers.length === 0) {\r\n    return <div>No team members found</div>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Navbar />\r\n      <section className=\"py-16 bg-white text-center\">\r\n        <h3 className=\"text-yellow-600 font-semibold text-lg\">Team Members</h3>\r\n        <h2 className=\"text-3xl font-bold text-gray-900 mt-2\">Meet Our Team</h2>\r\n\r\n        <div className=\"mt-12 space-y-10\">\r\n          {getPyramidRows(teamMembers).map((row, rowIndex) => (\r\n            <div\r\n              key={rowIndex}\r\n              className=\"flex justify-center gap-10 flex-wrap\"\r\n            >\r\n              {row.map((member, index) => (\r\n                <div key={index} className=\"flex flex-col items-center\">\r\n                  <img\r\n                    src={\r\n                      member?.relationships?.field_profile_picture\r\n                        ?.relationships?.field_media_image?.localFile?.url || \"\"\r\n                    }\r\n                    alt={member?.title || \"Team member\"}\r\n                    className=\"w-32 h-32 object-cover rounded-full border-4 border-yellow-400\"\r\n                  />\r\n                  <h4 className=\"mt-3 text-lg font-semibold text-gray-900\">\r\n                    {member?.title || \"Unknown\"}\r\n                  </h4>\r\n                  <p className=\"text-gray-500 text-sm\">\r\n                    {member?.field_designation || \"Unknown\"}\r\n                  </p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TeamSection\r\n"],"names":["TeamSection","teamMembers","setTeamMembers","useState","loading","setLoading","error","setError","GRAPHQL_ENDPOINT","process","GATSBY_GRAPHQL_ENDPOINT","useEffect","async","response","fetch","method","headers","body","JSON","stringify","query","result","json","data","allNodeWhoIsWho","nodes","Error","message","fetchTeamData","React","length","Header","Navbar","className","members","rows","start","rowSize","row","slice","push","getPyramidRows","map","rowIndex","key","member","index","_member$relationships","_member$relationships2","_member$relationships3","_member$relationships4","_member$relationships5","src","relationships","field_profile_picture","field_media_image","localFile","url","alt","title","field_designation","Footer"],"sourceRoot":""}