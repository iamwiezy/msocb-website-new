{"version":3,"file":"component---src-pages-training-capacities-js-df541c760e0fac21a761.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/@heroicons/react/24/outline/esm/ChevronLeftIcon.js","webpack://gatsby-starter-default/./node_modules/@heroicons/react/24/outline/esm/ChevronRightIcon.js","webpack://gatsby-starter-default/./src/pages/training_capacities.js"],"sourcesContent":["import * as React from \"react\";\nfunction ChevronLeftIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15.75 19.5 8.25 12l7.5-7.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ChevronLeftIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ChevronRightIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m8.25 4.5 7.5 7.5-7.5 7.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ChevronRightIcon);\nexport default ForwardRef;","import React, { useState } from \"react\"\r\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardFooter,\r\n  Typography,\r\n  Button,\r\n} from \"@material-tailwind/react\"\r\nimport { ChevronLeftIcon, ChevronRightIcon } from \"@heroicons/react/24/outline\"\r\nimport Header from \"../components/header\"\r\nimport Navbar from \"../components/navbar\"\r\nimport Footer from \"../components/footer\"\r\n\r\nconst ITEMS_PER_PAGE = 6\r\n\r\nconst TrainingCapacities = () => {\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      allNodeTraining(sort: { field_traning_date: DESC }) {\r\n        nodes {\r\n          title\r\n          field_traning_date(formatString: \"DD-MM-YYYY\")\r\n          path {\r\n            alias\r\n          }\r\n          body {\r\n            processed\r\n          }\r\n          relationships {\r\n            field_choose_photo {\r\n              relationships {\r\n                field_media_image {\r\n                  localFile {\r\n                    url\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const nodes = data.allNodeTraining.nodes\r\n  const totalPages = Math.ceil(nodes.length / ITEMS_PER_PAGE)\r\n  const startIndex = (currentPage - 1) * ITEMS_PER_PAGE\r\n  const currentNodes = nodes.slice(startIndex, startIndex + ITEMS_PER_PAGE)\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Navbar />\r\n      <div className=\"container mx-auto px-4 py-12\">\r\n        <Typography variant=\"h2\" className=\"text-center mb-10 text-blue-gray-800\">\r\n          Training Capacities\r\n        </Typography>\r\n\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-8\">\r\n          {currentNodes.map((node, index) => {\r\n            const imgSrc =\r\n              node.relationships.field_choose_photo?.[0]?.relationships?.field_media_image?.localFile?.url || null\r\n\r\n            return (\r\n              <Card\r\n                key={index}\r\n                className=\"shadow-xl rounded-2xl transition-transform hover:-translate-y-1 hover:shadow-2xl bg-white\"\r\n              >\r\n                <CardHeader floated={false} className=\"relative h-56 overflow-hidden\">\r\n                  {imgSrc ? (\r\n                    <img\r\n                      src={imgSrc}\r\n                      alt=\"Training Image\"\r\n                      className=\"w-full h-full object-cover\"\r\n                    />\r\n                  ) : (\r\n                    <div className=\"bg-gray-200 w-full h-full flex items-center justify-center text-gray-500 text-sm\">\r\n                      No Image Available\r\n                    </div>\r\n                  )}\r\n                </CardHeader>\r\n\r\n                <CardBody className=\"px-5 py-4\">\r\n                  <Typography variant=\"h6\" className=\"mb-2 text-blue-gray-900 font-semibold\">\r\n                    {node.title}\r\n                  </Typography>\r\n                  <Typography className=\"text-sm text-gray-500\">\r\n                    {node.field_traning_date}\r\n                  </Typography>\r\n                </CardBody>\r\n\r\n                <CardFooter className=\"px-5 pb-5\">\r\n                  <Link to={node.path.alias}>\r\n                    <Button fullWidth className=\"bg-blue-600 hover:bg-blue-700\">\r\n                      Read More\r\n                    </Button>\r\n                  </Link>\r\n                </CardFooter>\r\n              </Card>\r\n            )\r\n          })}\r\n        </div>\r\n\r\n        {/* Pagination */}\r\n        <div className=\"flex justify-center items-center mt-12 gap-4\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={() => setCurrentPage(currentPage - 1)}\r\n            disabled={currentPage === 1}\r\n            className=\"flex items-center gap-2 px-4\"\r\n          >\r\n            <ChevronLeftIcon className=\"h-4 w-4\" /> Previous\r\n          </Button>\r\n\r\n          <Typography variant=\"h6\" className=\"text-blue-gray-700\">\r\n            Page {currentPage} of {totalPages}\r\n          </Typography>\r\n\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={() => setCurrentPage(currentPage + 1)}\r\n            disabled={currentPage === totalPages}\r\n            className=\"flex items-center gap-2 px-4\"\r\n          >\r\n            Next <ChevronRightIcon className=\"h-4 w-4\" />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TrainingCapacities\r\n"],"names":["ChevronLeftIcon","title","titleId","props","svgRef","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","ChevronRightIcon","TrainingCapacities","currentPage","setCurrentPage","useState","nodes","useStaticQuery","allNodeTraining","totalPages","Math","ceil","length","startIndex","currentNodes","slice","React","Header","Navbar","className","Typography","variant","map","node","index","_node$relationships$f","_node$relationships$f2","_node$relationships$f3","_node$relationships$f4","_node$relationships$f5","imgSrc","relationships","field_choose_photo","field_media_image","localFile","url","Card","key","CardHeader","floated","src","alt","CardBody","field_traning_date","CardFooter","Link","to","path","alias","Button","fullWidth","onClick","disabled","Footer"],"sourceRoot":""}